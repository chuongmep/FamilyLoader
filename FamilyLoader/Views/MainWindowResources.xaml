<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:local="clr-namespace:Gensler.Revit.FamilyLoader.Views">
    <!--Grid Styles-->
    <Style x:Key="GridStyle" TargetType="{x:Type Grid}">
        <Setter Property="ShowGridLines" Value="False"/>
        <Setter Property="Background" Value="#FFEEEEEE"/>
    </Style>

    <Style x:Key="GridStyleMargin" TargetType="{x:Type Grid}">
        <Setter Property="ShowGridLines" Value="False"/>
        <Setter Property="Background" Value="#FFEEEEEE"/>
        <Setter Property="Margin" Value="10, 0"/>
    </Style>

    <!--RowDefinition Styles-->
    <Style x:Key="RowStyleFixed" TargetType="{x:Type RowDefinition}">
        <Setter Property="Height" Value="50"/>
    </Style>

    <Style x:Key="RowStyleFlex" TargetType="{x:Type RowDefinition}">
        <!--<Setter Property="Height" Value="100"/>-->
    </Style>

    <Style x:Key="RowStyleSpacer" TargetType="{x:Type RowDefinition}">
        <Setter Property="Height" Value="5"/>
    </Style>

    <!--ColumnDefinition Style-->
    <Style x:Key="ColStyleFixed" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="100"/>
    </Style>

    <Style x:Key="ColStyleButton" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="70"/>
    </Style>

    <Style x:Key="ColStyleFlex" TargetType="{x:Type ColumnDefinition}">
        <!--<Setter Property="MinWidth" Value="100"/>-->
    </Style>

    <Style x:Key="ColStyleMin" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="20"/>
    </Style>

    <!--TextBox Style-->
    <Style x:Key="TextBoxStyleBrowser" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Style.Resources>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="   Select a folder..." Foreground="Gray" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBoxStyleResults" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Style.Resources>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content=" Not calculated" Foreground="Gray" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Button Style-->
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="0,10,10,10"/>
    </Style>

    <Style x:Key="ButtonStyleRight" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5, 0, 0, 0"/>
    </Style>

    <!--TextBlock Style-->
    <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="10,5,10,5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="DarkGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--GroupBox Template-->
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style x:Key="GroupBoxStyleNoShadow" TargetType="{x:Type GroupBox}">
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3"/>
                        <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3">
                            <Border.OpacityMask>
                                <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                    <Binding ElementName="Header" Path="ActualWidth"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Label Template-->
    <Style x:Key="LabelStyleBold" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <!--<Setter Property="Margin" Value="0"/>-->
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="18"></Setter>
    </Style>

</ResourceDictionary>
